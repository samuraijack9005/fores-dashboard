{"version":3,"sources":["forex_main.js"],"names":["app","angular","module","controller","$scope","$http","$timeout","timeFrameArray","serverAddress","timeFrame","refreshButton","currencies","apiCall","method","url","then","response","ApiData","data","weakStrong","currencyMeter2","error","console","log","chartFunc","time","bullData","bearData","animal","i","length","push","label","y","bull","bear","CanvasJS","Chart","height","width","axisY","labelFontSize","margin","axisX","type","color","dataPoints","render","$","remove","getDxy","currentDxy","current","changeDxy","change","setInterval","getNews","breakingNews","stories","element","removeClass","newsRaw","impact","refreshNews","addClass","c","changeCal","list","currentEvents","getCalendar","todaysEvents","tomorrowsEvents","calendarData","JSON","parse","stringify","startIndex","endIndex","startFound","yesterdaysEvents","slice","filter","string","str","replace","split","join"],"mappings":"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","file":"../main.min.js","sourcesContent":["var app = angular.module(\"mainApp\", []);\napp.controller(\"mainController\", ['$scope', '$http', \"$timeout\", function($scope, $http, $timeout) {\n\n    $scope.timeFrameArray = [\"h1\", \"h4\", \"d1\", \"w1\"];\n    $scope.serverAddress='http://3.14.15.110:4000';\n    $scope.timeFrame = 'h1';\n    $scope.refreshButton = 'refresh-inactive';\n\n    $scope.currencies = ['aud', 'usd', 'eur', 'cad', 'gbp', 'chf', 'jpy', 'nzd']\n    $scope.apiCall = function() {\n        $http({\n            method: 'GET',\n            url: $scope.serverAddress+'/api'\n        }).then(function(response) {\n            $scope.ApiData = response.data.data;\n            $scope.weakStrong = $scope.ApiData[2];\n            $scope.currencyMeter2 = $scope.ApiData[0]\n\n\n        }, function(error) {\n            console.log(error);\n        });\n    }\n    $scope.apiCall();\n\n    $scope.chartFunc = function(time) {\n\n        let bullData = [];\n        let bearData = [];\n        $scope.animal = $scope.ApiData[0][time]\n\n        for (let i = 0; i < $scope.currencies.length; i++) {\n\n            bullData.push({\n                'label': $scope.currencies[i],\n                'y': $scope.animal[$scope.currencies[i]].bull\n            })\n\n            bearData.push({\n                'label': $scope.currencies[i],\n                'y': $scope.animal[$scope.currencies[i]].bear\n            })\n        }\n\n        var chart1 = new CanvasJS.Chart(\"animals\", {\n            height: 190,\n            width: 300,\n            axisY: {\n                labelFontSize: 10,\n                margin:-18\n            },\n            axisX:{\n\n            },\n            data: [{\n                    type: 'bar',\n                    color: 'green',\n                    dataPoints: bullData\n                },\n                {\n                    type: 'bar',\n                    color: 'red',\n                    dataPoints: bearData\n                }\n            ]\n        });\n        chart1.render();\n        $(\".canvasjs-chart-credit\").remove();\n\n    }\n\n    $scope.getDxy = function() {\n        $http({\n            method: 'GET',\n            url: $scope.serverAddress+'/dxy'\n        }).then(function(response) {\n            $scope.currentDxy = response.data.data[0].current;\n            $scope.changeDxy = response.data.data[0].change;\n\n        }, function(error) {\n            console.log(error);\n        });\n    }\n    $scope.getDxy();\n    setInterval(function() { $scope.getDxy() }, 5000)\n\n\n    $scope.getNews = function() {\n        $scope.breakingNews = [];\n        $scope.stories = [];\n        $http({\n            method: 'GET',\n            url: $scope.serverAddress+'/news'\n        }).then(function(response) {\n            $scope.refreshButton = 'refresh-inactive';\n            angular.element('#refresh-button').removeClass('class-rotate')\n            $scope.newsRaw = response.data.data;\n            for (let i = 0; i < $scope.newsRaw.length; i++) {\n                if ($scope.newsRaw[i].impact == 'high' || $scope.newsRaw[i].impact == 'medium') {\n                    $scope.breakingNews.push($scope.newsRaw[i])\n                } else {\n                    $scope.stories.push($scope.newsRaw[i])\n                }\n            }\n\n        }, function(error) {\n            console.log(error);\n        });\n    }\n\n    $scope.getNews();\n    setInterval(function() {\n        $scope.refreshButton = 'refresh-active';\n        $scope.getNews()\n    }, 600000)\n    let c = 0;\n    $scope.refreshNews = function() {\n        $scope.refreshButton = 'refresh-active';\n        angular.element('#refresh-button').addClass('class-rotate')\n        $scope.getNews();\n\n        c++\n        console.log($scope.refreshButton)\n    }\n    $scope.changeCal = function(list) {\n        console.log(list)\n        $scope.currentEvents = [];\n        $scope.currentEvents = list;\n    }\n    $scope.getCalendar = function() {\n        $http({\n            method: 'GET',\n            url: $scope.serverAddress+'/calendar'\n        }).then(function(response) {\n            $scope.todaysEvents = [];\n            $scope.tomorrowsEvents = [];\n            $scope.calendarData = JSON.parse(JSON.stringify(response.data.data));\n            let startIndex = -1;\n            let endIndex = -1;\n            $scope.startFound = false;\n            for (let i = 0; i < $scope.calendarData.length; i++) {\n                let data = JSON.parse(JSON.stringify($scope.calendarData[i]))\n                if (data['date'] == 'today') {\n                    if (!$scope.startFound) {\n                        if (startIndex == -1) {\n                            startIndex = i;\n                            $scope.startFound = true;\n                            continue;\n                        }\n                    }\n                }\n                if ($scope.startFound && data['date'] != 'today') {\n                    endIndex = i;\n                    break;\n                }\n            }\n            $scope.yesterdaysEvents = $scope.calendarData.slice(0, startIndex);\n            $scope.todaysEvents = $scope.calendarData.slice(startIndex, endIndex);\n            $scope.tomorrowsEvents = $scope.calendarData.slice(endIndex, $scope.calendarData.length);\n            console.log($scope.calendarData)\n            console.log(startIndex, endIndex);\n            console.log($scope.yesterdaysEvents)\n            console.log($scope.todaysEvents)\n            console.log($scope.tomorrowsEvents)\n            $scope.changeCal($scope.todaysEvents);\n\n        }, function(error) {\n            console.log(error);\n        });\n    }\n    $scope.getCalendar();\n\n\n\n\n\n\n}]);\n\n\napp.filter('first60', [function() {\n    return function(string) {\n\n        if (string.length > 60) {\n            return string.slice(0, 60) + \"...\";\n        } else {\n            return string;\n        }\n    };\n}])\n\napp.filter('idTypeCast', [function() {\n    return function(string) {\n        let str=string.replace(/[0-9]/g,'X');\n        str=str.replace(/[;]/g,'X');\n        str = str.replace(/[&\\/\\\\#,+()$~%.'\":*?<>{}]/g, '');\n\n        return str.split(\" \").join(\"-\")\n    };\n}])\n\napp.filter('timeFilter', [function() {\n    return function(string) {\n\n        let str = string.replace(/ago/g, '');\n        str = str.replace(/min/g, 'm')\n        str = str.replace(/hr/g, 'h')\n        return str\n    };\n}])\n\napp.filter('dateSlice', [function() {\n    return function(string) {\n        return string.slice(0,string.length-2)\n    };\n}])"]}